import graphviz

graph = graphviz.Digraph(format="svg")

operations = [
    ("jdr", "wvk", "z32"),
    ("x06", "y06", "vsv"),
    ("x32", "y32", "dwn"),
    ("x40", "y40", "ftm"),
    ("wcb", "mcn", "vwj"),
    ("x14", "y14", "vjc"),
    ("knj", "rtq", "hvj"),
    ("scr", "fvs", "cnw"),
    ("vtk", "rcm", "fbc"),
    ("y24", "x24", "ftc"),
    ("vtc", "cwm", "z28"),
    ("vmc", "ffj", "fqs"),
    ("dqd", "dnn", "ffj"),
    ("spp", "qtk", "z23"),
    ("rmm", "hvj", "z10"),
    ("gvh", "fbh", "hdb"),
    ("nrv", "ftm", "mcn"),
    ("y29", "x29", "gnc"),
    ("gtq", "npm", "gpf"),
    ("y22", "x22", "hgq"),
    ("fpw", "vsw", "sff"),
    ("pnm", "tpn", "mkg"),
    ("y16", "x16", "chg"),
    ("x43", "y43", "qjh"),
    ("jqn", "jjv", "hkc"),
    ("gbr", "nrs", "smt"),
    ("x07", "y07", "jmm"),
    ("nnm", "dcs", "tgh"),
    ("kvw", "hsn", "bdq"),
    ("mpb", "kdc", "rwv"),
    ("mvh", "mkg", "z18"),
    ("rwq", "kbg", "pvs"),
    ("x23", "y23", "mkf"),
    ("y38", "x38", "psb"),
    ("fwp", "phm", "gbb"),
    ("ftm", "nrv", "z40"),
    ("y16", "x16", "fwp"),
    ("y17", "x17", "wdm"),
    ("phm", "fwp", "z16"),
    ("sff", "wkd", "z19"),
    ("y35", "x35", "hsn"),
    ("sqw", "fnj", "rkt"),
    ("pgt", "hgq", "jbd"),
    ("wps", "fhw", "vtc"),
    ("x42", "y42", "gvh"),
    ("qjw", "smt", "z42"),
    ("nsj", "qdq", "nnm"),
    ("x02", "y02", "vht"),
    ("fjr", "ndm", "hdc"),
    ("vsq", "mkf", "hrv"),
    ("npm", "gtq", "z06"),
    ("grh", "bbk", "nrv"),
    ("qjr", "vvj", "vsb"),
    ("qtk", "spp", "vsq"),
    ("fjh", "kfr", "z39"),
    ("x40", "y40", "wcb"),
    ("rbj", "jfc", "hbj"),
    ("jbd", "gjh", "spp"),
    ("vsb", "ktw", "fcv"),
    ("jhk", "nvd", "cnt"),
    ("dwp", "tpr", "knt"),
    ("x36", "y36", "pmp"),
    ("y39", "x39", "kfr"),
    ("y42", "x42", "qjw"),
    ("ktw", "vsb", "z04"),
    ("bcb", "qps", "tqb"),
    ("ggt", "vwj", "z41"),
    ("y05", "x05", "grd"),
    ("str", "pkg", "scr"),
    ("mkg", "mvh", "fpw"),
    ("x31", "y31", "ctt"),
    ("rkt", "vjc", "z14"),
    ("vwj", "ggt", "nrs"),
    ("fpp", "jfn", "z05"),
    ("grd", "bqn", "gtq"),
    ("dhr", "wdm", "z17"),
    ("x25", "y25", "hds"),
    ("x34", "y34", "jjd"),
    ("gpt", "hkc", "z27"),
    ("scm", "pcj", "pgt"),
    ("scw", "dnc", "wqq"),
    ("x41", "y41", "gbr"),
    ("fvs", "scr", "z29"),
    ("pvs", "ccd", "z21"),
    ("x30", "y30", "dqc"),
    ("tsb", "kcj", "trn"),
    ("x25", "y25", "mtt"),
    ("rns", "hnn", "vhw"),
    ("hrv", "ftc", "z24"),
    ("fbc", "vbf", "z02"),
    ("hbj", "rrn", "qps"),
    ("fpp", "jfn", "bqn"),
    ("tnd", "hhk", "z30"),
    ("fjr", "ndm", "z36"),
    ("x19", "y19", "wkd"),
    ("x23", "y23", "qtk"),
    ("y01", "x01", "kgc"),
    ("y19", "x19", "scw"),
    ("dvd", "wqm", "ckq"),
    ("cwm", "vtc", "pkg"),
    ("jrb", "jjp", "z12"),
    ("x08", "y08", "dqd"),
    ("wkm", "pwq", "tpr"),
    ("prd", "vht", "sfh"),
    ("fcv", "pkw", "jfn"),
    ("y07", "x07", "dvd"),
    ("jss", "bdq", "ndm"),
    ("y09", "x09", "rtq"),
    ("y00", "x00", "z00"),
    ("y43", "x43", "tsb"),
    ("qjw", "smt", "fbh"),
    ("x33", "y33", "jfc"),
    ("x04", "y04", "ktw"),
    ("x44", "y44", "rbs"),
    ("x10", "y10", "nsj"),
    ("jfm", "ssc", "z26"),
    ("y24", "x24", "rdj"),
    ("bcj", "hds", "gtn"),
    ("y35", "x35", "jss"),
    ("rbs", "rvg", "z45"),
    ("y13", "x13", "sqw"),
    ("jjd", "tqb", "kvw"),
    ("rvh", "kgc", "z01"),
    ("y08", "x08", "vmc"),
    ("x15", "y15", "dwp"),
    ("y17", "x17", "tpn"),
    ("x11", "y11", "dcs"),
    ("x06", "y06", "npm"),
    ("sqc", "chd", "z37"),
    ("wqm", "dvd", "z07"),
    ("x29", "y29", "fvs"),
    ("hdb", "qjh", "kcj"),
    ("x37", "y37", "chd"),
    ("vsv", "gpf", "wqm"),
    ("y15", "x15", "kfm"),
    ("kbp", "sfh", "z03"),
    ("y14", "x14", "wkm"),
    ("rvh", "kgc", "vtk"),
    ("y44", "x44", "vsk"),
    ("y38", "x38", "tbh"),
    ("x26", "y26", "jfm"),
    ("x12", "y12", "nvd"),
    ("cnt", "vnw", "fnj"),
    ("hkc", "gpt", "wps"),
    ("x39", "y39", "grh"),
    ("trn", "vsk", "z44"),
    ("x20", "y20", "rwq"),
    ("sbs", "fqs", "knj"),
    ("x03", "y03", "kbp"),
    ("trn", "vsk", "rvg"),
    ("tpr", "dwp", "z15"),
    ("psb", "rwv", "jth"),
    ("x37", "y37", "mpb"),
    ("jrb", "jjp", "jhk"),
    ("x03", "y03", "vvj"),
    ("ctt", "vhw", "z31"),
    ("jfc", "rbj", "z33"),
    ("gbb", "chg", "dhr"),
    ("x11", "y11", "ngf"),
    ("pvs", "ccd", "pcj"),
    ("y02", "x02", "vbf"),
    ("ftc", "hrv", "wwp"),
    ("jth", "tbh", "fjh"),
    ("x10", "y10", "rmm"),
    ("x18", "y18", "vsw"),
    ("wvk", "jdr", "bhw"),
    ("y36", "x36", "fjr"),
    ("y04", "x04", "pkw"),
    ("x09", "y09", "sbs"),
    ("x27", "y27", "fhw"),
    ("x26", "y26", "jjv"),
    ("rkt", "vjc", "pwq"),
    ("x28", "y28", "str"),
    ("y28", "x28", "cwm"),
    ("x20", "y20", "vbh"),
    ("x32", "y32", "wvk"),
    ("y34", "x34", "bcb"),
    ("ssc", "jfm", "jqn"),
    ("y27", "x27", "gpt"),
    ("gnc", "cnw", "hhk"),
    ("tgh", "ngf", "jjp"),
    ("kbp", "sfh", "qjr"),
    ("mtt", "gtn", "ssc"),
    ("hvj", "rmm", "qdq"),
    ("dnn", "dqd", "z08"),
    ("x01", "y01", "rcm"),
    ("y22", "x22", "z22"),
    ("fbc", "vbf", "prd"),
    ("y13", "x13", "vnw"),
    ("x21", "y21", "ccd"),
    ("rwv", "psb", "z38"),
    ("pmp", "hdc", "sqc"),
    ("hdb", "qjh", "z43"),
    ("rns", "hnn", "jdr"),
    ("chd", "sqc", "kdc"),
    ("x21", "y21", "scm"),
    ("sff", "wkd", "dnc"),
    ("dhr", "wdm", "pnm"),
    ("y31", "x31", "rns"),
    ("y05", "x05", "fpp"),
    ("hsn", "kvw", "z35"),
    ("y30", "x30", "tnd"),
    ("x00", "y00", "rvh"),
    ("y41", "x41", "ggt"),
    ("bcb", "qps", "z34"),
    ("kfm", "knt", "phm"),
    ("x18", "y18", "mvh"),
    ("vnw", "cnt", "z13"),
    ("vbh", "wqq", "z20"),
    ("dcs", "nnm", "z11"),
    ("hds", "bcj", "z25"),
    ("wqq", "vbh", "kbg"),
    ("bhw", "dwn", "rbj"),
    ("sbs", "fqs", "z09"),
    ("wwp", "rdj", "bcj"),
    ("x33", "y33", "rrn"),
    ("y12", "x12", "jrb"),
    ("tnd", "hhk", "cns"),
    ("jmm", "ckq", "dnn"),
    ("cns", "dqc", "hnn"),
    ("fjh", "kfr", "bbk"),
    ("pgt", "hgq", "gjh"),
]

for op1, op2, result in operations:
    graph.edge(op1, result)
    graph.edge(op2, result)

graph.render("graph", format="svg")
